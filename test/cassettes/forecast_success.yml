---
http_interactions:
- request:
    method: post
    uri: http://localhost:8086/api/v2/query?org=my-org
    body:
      encoding: UTF-8
      string: '{"query":"from(bucket: \"my-bucket\")\n|> range(start: 1701423000,
        stop: 1701509400)\n|> filter(fn: (r) => r[\"_measurement\"] == \"my-forecast\")\n|>
        filter(fn: (r) => r[\"_field\"] == \"watt\")\n|> aggregateWindow(every: 1h,
        fn: mean, createEmpty: false)\n|> map(fn: (r) => ({ r with _value: r._value
        / 1000.0 }))\n|> sum()\n","dialect":{"header":true,"delimiter":",","annotations":["datatype","group","default"],"commentPrefix":"#","dateTimeFormat":"RFC3339"}}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - influxdb-client-ruby/3.1.0
      Authorization:
      - Token <INFLUX_TOKEN>
      Content-Type:
      - application/json
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/csv; charset=utf-8
      Vary:
      - Accept-Encoding
      X-Influxdb-Build:
      - OSS
      X-Influxdb-Version:
      - v2.7.10
      Date:
      - Sat, 09 Nov 2024 05:25:38 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: "#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,string,string,double\r\n#group,false,false,true,true,true,true,false\r\n#default,_result,,,,,,\r\n,result,table,_start,_stop,_field,_measurement,_value\r\n,,0,2023-12-01T09:30:00Z,2023-12-02T09:30:00Z,watt,my-forecast,22.1\r\n\r\n"
  recorded_at: Fri, 01 Dec 2023 09:30:00 GMT
recorded_with: VCR 6.3.1
