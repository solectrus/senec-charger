---
http_interactions:
- request:
    method: post
    uri: http://localhost:8086/api/v2/query?org=my-org
    body:
      encoding: UTF-8
      string: '{"query":"from(bucket: \"my-bucket\")\n|> range(start: now(), stop:
        24h)\n|> filter(fn: (r) => r[\"_measurement\"] == \"my-forecast\")\n|> filter(fn:
        (r) => r[\"_field\"] == \"watt\")\n|> aggregateWindow(every: 1h, fn: mean,
        createEmpty: false)\n|> map(fn: (r) => ({ r with _value: r._value / 1000.0
        }))\n|> sum()\n","dialect":{"header":true,"delimiter":",","annotations":["datatype","group","default"],"commentPrefix":"#","dateTimeFormat":"RFC3339"}}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - influxdb-client-ruby/3.0.0
      Authorization:
      - Token <INFLUX_TOKEN>
      Content-Type:
      - application/json
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/csv; charset=utf-8
      Vary:
      - Accept-Encoding
      X-Influxdb-Build:
      - OSS
      X-Influxdb-Version:
      - v2.7.4
      Date:
      - Tue, 12 Dec 2023 17:52:56 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: "#datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,string,string,double\r\n#group,false,false,true,true,true,true,false\r\n#default,_result,,,,,,\r\n,result,table,_start,_stop,_field,_measurement,_value\r\n,,0,2023-12-12T17:52:56.101982593Z,2023-12-13T17:52:56.101982593Z,watt,my-forecast,15.0405\r\n\r\n"
  recorded_at: Tue, 12 Dec 2023 17:53:02 GMT
recorded_with: VCR 6.2.0
